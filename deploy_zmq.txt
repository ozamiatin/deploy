<<<<<<< HEAD
ssh admin@172.18.204.39


. ../../py27/bin/activate

python -m wally test test configs-examples/omg.yaml

dpkg -l | grep messaging

http://perestroika-repo-tst.infra.mirantis.net/review/CR-16347/mos-repos/ubuntu/8.0/pool/main/p/python-oslo.messaging/


http://172.18.162.63/review/CR-19937/mos-repos/ubuntu/9.0/pool/main/p/python-oslo.messaging/


for i in `fuel node|grep compute | awk '{print $9}'`; do ssh $i 'for p in `ps aux | grep simul`; do kill $p; done'; done
for i in `fuel node|grep compute | awk '{print $9}'`; do ssh $i 'for p in `ps aux | grep simul |grep -v grep|cut -c6-15`; do echo $p; done'; done
for i in `fuel node|grep compute | awk '{print $9}'`; do ssh $i 'for p in `ps aux | grep simul |grep -v grep|cut -c6-15`; do kill -9 $p; done'; done


for i in `fuel node|grep compute | awk '{print $9}'`; do ssh $i `ps aux | grep simul | grep awk '{print $2}'`; done


wget http://172.18.162.63/review/CR-19937/mos-repos/ubuntu/9.0/pool/main/p/python-oslo.messaging/python-oslo.messaging_4.6.1-3~u14.04%2bmos7_all.deb

screen -d -R omgbench
screen -d -R devstack

git clone https://github.com/openstack-dev/devstack.git

[[local|localrc]]
DATABASE_PASSWORD=password
ADMIN_PASSWORD=password
SERVICE_PASSWORD=password
SERVICE_TOKEN=password
RABBIT_PASSWORD=password

enable_plugin zmq https://github.com/openstack/devstack-plugin-zmq.git

ZEROMQ_MATCHMAKER=redis
LIBS_FROM_GIT=oslo.messaging
ENABLE_DEBUG_LOG_LEVEL=True

OSLOMSG_REPO=https://review.openstack.org/openstack/oslo.messaging
OSLOMSG_BRANCH=refs/changes/26/347226/2
OSLOMSG_BRANCH=refs/changes/04/342904/6

disable_service n-net
disable_service rabbit
# Enable Neutron

    # core compute (glance / keystone / nova (+ nova-network))
ENABLED_SERVICES=g-api,g-reg,key,n-api,n-crt,n-obj,n-cpu,n-cond,n-sch,n-xvnc,n-cauth
    # cinder
ENABLED_SERVICES+=,q-svc,q-agt,q-dhcp,q-l3,q-meta,neutron
ENABLED_SERVICES+=,c-sch,c-api,c-vol
    # heat
ENABLED_SERVICES+=,h-eng,h-api,h-api-cfn,h-api-cw
ENABLED_SERVICES+=,q-svc,q-dhcp,q-meta,q-agt,q-l3
    # dashboard
ENABLED_SERVICES+=,horizon
    # additional services
ENABLED_SERVICES+=,zeromq,tempest,mysql



https://github.com/ozamiatin/oslo.messaging.git

git clone https://github.com/ozamiatin/devstack.git
git clone https://github.com/openstack-dev/devstack.git

ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"


./setup-test-env-zmq-proxy.sh nosetests -sv oslo_messaging.tests.functional.test_functional:CallTestCase.test_different_exchanges

./setup-test-env-zmq-proxy.sh nosetests -sv oslo_messaging.tests.functional.test_functional:CallTestCase.test_timeout
./setup-test-env-zmq.sh nosetests -sv oslo_messaging.tests.functional.test_functional:CallTestCase.test_timeout_with_concurrently_queues
 
./setup-test-env-zmq.sh nosetests -sv oslo_messaging.tests.functional.test_functional:CastTestCase.test_fanout
 
./setup-test-env-zmq.sh nosetests -sv oslo_messaging.tests.functional.notify.test_logger:LoggingNotificationHandlerTestCase


./setup-test-env-zmq.sh nosetests -sv oslo_messaging.tests.functional.zmq.test_startup:StartupOrderTestCase.test_call_server_before_client

./setup-test-env-zmq.sh nosetests -sv oslo_messaging.tests.functional.notify.test_logger:LoggingNotificationHandlerTestCase.test_logging

./setup-test-env-zmq.sh nosetests -sv oslo_messaging.tests.functional.zmq.test_heartbeats:HeartbeatsTestCase.test_call_redirected_server_shutdown

./setup-test-env-zmq.sh nosetests -sv oslo_messaging.tests.functional.zmq.test_heartbeats:HeartbeatsTestCase.test_call_redirected_server_hang

./setup-test-env-zmq.sh nosetests -sv oslo_messaging.tests.functional.test_functional:NotifyTestCase.test_independent_topics

nosetests -sv  tempest.api.identity.admin.v2.test_users:UsersTestJSON

nosetests -sv tempest.api.identity.admin.v3.test_domains:DomainsTestJSON
nosetests -sv tempest.api.compute.servers.test_create_server:ServersTestManualDisk


for pid in $(ps aux | grep prox[y] | awk '{print $2}'); do kill -9 $pid; done


ss -pn | grep -P ":[2-6]\d{4}" | awk -F\" '{print $2}' | sort | uniq -c

find . -name "*.pyc" -delete

iptables -A INPUT -p tcp --match multiport --dports 49152:65535 -j ACCEPT

iptables -A INPUT -p tcp --match multiport --dport 6379 -j ACCEPT

Sentinel deploy

you have to use at least 3 nodes for redis.
1. apt-get install redis-server python-redis
2. edit /etc/redis/redis.conf
master
replace `bind 127.0.0.1` with `bind 127.0.0.1 your.ip.addr.ess`
slave
replace `bind 127.0.0.1` with `bind 127.0.0.1 your.ip.addr.ess`
add `slaveof master.ip.addr.ess 6379`
    restart Redis on each of 3 nodes. service redis-server restart

    connect to a master node using
        redis-cli -h master.ip.addr.ess info replication`
       check if slave0 and slave1 are ok
       the output should be smth like this
        slave0:ip=192.168.0.6,port=6379,state=online,offset=58564721,lag=1
        slave1:ip=192.168.0.7,port=6379,state=online,offset=58564876,lag=0

run sentinel. This can be done in screens
`mkdir sentinel`
`cd $_; screen -S sentinel`

Create sentinel config sentinel.conf
port 26379
sentinel monitor oslo-messaging-zeromq 192.168.0.3 6379 2
sentinel down-after-milliseconds oslo-messaging-zeromq 2000
sentinel failover-timeout oslo-messaging-zeromq 60000
sentinel config-epoch oslo-messaging-zeromq 106

run `redis-sentinel sentinel.conf &` on each controller

allow tcp traffics
iptables -A INPUT -p tcp --match multiport --dports 6379,26379 -j ACCEPT
iptables -A OUTPUT -p tcp --match multiport --dports 6379,26379 -j ACCEPT
iptables -A FORWARD -p tcp --match multiport --dports 6379,26379 -j ACCEPT

iptables -A INPUT -p tcp --match multiport --dports 6379,16379,26379,50001,50002,50003 -j ACCEPT
iptables -A INPUT -p tcp --match multiport --dports 49152:65535 -j ACCEPT


Zmq config:
[matchmaker_redis] 
sentinel_hosts=host1:26379, host2:26379, host3:26379


export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LDFLAGS="-L$(brew --prefix openssl)/lib"
export CFLAGS="-I$(brew --prefix openssl)/include"

env LDFLAGS="-L$(brew --prefix openssl)/lib" CFLAGS="-I$(brew --prefix openssl)/include" pip install -r test-requirements.txt
